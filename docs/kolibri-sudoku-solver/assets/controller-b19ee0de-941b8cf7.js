import{g as u,p as m}from"./controller-75d286de-794996c9.js";import{D as f,U as b,$ as v,J as r,T as y}from"./prop.validators-125a3282-9e7c3ce9.js";import{s as _,i as O}from"./label-0d258cd5-df9469c6.js";import{n as l}from"./a11y.tipps-583a2096-ea796d66.js";import{s as g}from"./index-294842fb.js";/*!
 * KoliBri - The accessible HTML-Standard
 */const p=e=>{if(typeof e=="object"&&e!==null){if(typeof e.label=="string"&&e.label.length>0)return e.disabled=e.disabled===!0,e.label=`${e.label}`.trim(),_(e.label,3)===!1&&O(e.label)===!1&&l(`Ein abweichendes Aria-Label (${e.label}) ist nicht barrierefrei. Ein abweichendes Aria-Label sollte aus mindestens drei lesbaren Zeichen bestehen.`),!Array.isArray(e.options)||e.options.find(t=>p(t)===!1)===void 0;if(typeof e.label=="number")return!0}return!1},A=(e,t,i={})=>{r(e,"_options",o=>typeof o=="object"&&o!==null&&typeof o.label=="string"&&o.label.length>0,t,void 0,i)},M=(e,t,i={})=>{r(e,"_options",p,t,void 0,i)},$=(e,t)=>{y(e,"_required",t)},h=(e,t,i="")=>{t.forEach((o,a)=>{const n=`${i}-${a}`;typeof o=="object"&&o!==null&&typeof o.label=="string"&&o.label.length>0&&(Array.isArray(o.options)?h(e,o.options,n):e.set(n,o))})};class E extends u{constructor(t,i,o){super(t,i,o),this.component=t}validateHideError(t){m(this.component,t,{hooks:{afterPatch:()=>{this.component.state._hideError&&l("Property hide-error for inputs: Only use when the error message is shown outside of the input component.")}}})}validateRequired(t){$(this.component,t)}componentWillLoad(){super.componentWillLoad(),this.validateRequired(this.component._required)}}class q extends E{constructor(t,i,o){super(t,i,o),this.keyOptionMap=new Map,this.getOptionByKey=a=>this.keyOptionMap.get(a),this.isValueInOptions=(a,n)=>n.find(s=>s.value===a)!==void 0,this.beforePatchOptions=(a,n)=>{const s=n.has("_options")?n.get("_options"):this.component.state._options;if(Array.isArray(s)&&s.length>0){this.keyOptionMap.clear(),h(this.keyOptionMap,s);const c=n.has("_value")?n.get("_value"):this.component.state._value;if(this.isValueInOptions(c,s)===!1){const d=s[0].value;n.set("_value",d),this.onStateChange()}}},this.component=t}validateOrientation(t){f(this.component,"_orientation",i=>i==="horizontal"||i==="vertical",new Set(["Orientation {horizontal, vertical}"]),t,{defaultValue:"vertical"})}validateOptions(t){A(this.component,t,{hooks:{beforePatch:this.beforePatchOptions}})}validateValue(t){t=b(t),t=Array.isArray(t)?t[0]:t,v(this.component,"_value",t,{beforePatch:this.beforePatchOptions}),this.setFormAssociatedValue(this.component._value)}componentWillLoad(t){super.componentWillLoad(),this.onStateChange=()=>{if(typeof t=="function"){const i=setTimeout(()=>{clearTimeout(i),t(g)})}},this.validateOrientation(this.component._orientation),this.validateOptions(this.component._options),this.validateHideError(this.component._hideError),this.validateValue(this.component._value)}}export{E as b,h as m,M as p,q as v};
