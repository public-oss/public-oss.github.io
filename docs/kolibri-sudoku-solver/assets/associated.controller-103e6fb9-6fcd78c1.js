import{C as h}from"./prop.validators-125a3282-9e7c3ce9.js";import{r as d,t as m}from"./a11y.tipps-583a2096-ea796d66.js";import{t as f}from"./index-294842fb.js";/*!
 * KoliBri - The accessible HTML-Standard
 */const y=(l,t,i)=>{h(l,"_name",t,i)},n=f();class v{constructor(t,i,e){var o,a;if(this.setFormAssociatedValue=s=>{var r;const c=(r=this.formAssociated)===null||r===void 0?void 0:r.getAttribute("name");c!==null&&c!==""||d(` The form field (${this.name}) must have a name attribute to be form-associated. Please define the _name attribute.`);const u=this.tryToStringifyValue(s);this.syncValue(s,u,this.formAssociated),this.syncValue(s,u,this.syncToOwnInput)},this.component=t,this.host=this.findHostWithShadowRoot(e),this.name=i,n){switch((o=this.host)===null||o===void 0||o.querySelectorAll("input,select,textarea").forEach(s=>{var r;(r=this.host)===null||r===void 0||r.removeChild(s)}),this.name){case"button":this.formAssociated=document.createElement("button");break;case"select":this.formAssociated=document.createElement("select"),this.formAssociated.setAttribute("multiple","");break;case"textarea":this.formAssociated=document.createElement("textarea");break;default:this.formAssociated=document.createElement("input"),this.formAssociated.setAttribute("type","hidden")}this.formAssociated.setAttribute("aria-hidden","true"),this.formAssociated.setAttribute("data-form-associated",""),this.formAssociated.setAttribute("hidden",""),(a=this.host)===null||a===void 0||a.appendChild(this.formAssociated)}}findHostWithShadowRoot(t){for(;(t==null?void 0:t.shadowRoot)===null&&t!==document.body;)(t=t==null?void 0:t.parentNode).host&&(t=t.host);return t}setAttribute(t,i,e){if(n)try{if(typeof(e=typeof e=="object"&&e!==null?JSON.stringify(e):e)!="boolean"&&typeof e!="number"&&typeof e!="string")throw new Error("Invalid value type: "+typeof e);i==null||i.setAttribute(t,`${e}`)}catch{i==null||i.removeAttribute(t)}}tryToStringifyValue(t){try{return typeof t=="object"&&t!==null?JSON.stringify(t).toString():t==null?null:t.toString()}catch(i){return m(`The form field raw value is not able to stringify! ${i}`),""}}syncValue(t,i,e){e&&(this.name==="select"?(e.querySelectorAll("option").forEach(o=>{e.removeChild(o)}),Array.isArray(t)&&t.forEach(o=>{const a=this.tryToStringifyValue(o);if(typeof a=="string"){const s=document.createElement("option");s.setAttribute("value",a),s.setAttribute("selected",""),e.appendChild(s)}})):typeof i=="string"?(e.setAttribute("value",i),e.value=i):(e.removeAttribute("value"),e.value=""))}validateName(t){y(this.component,t,{hooks:{afterPatch:()=>{this.setAttribute("name",this.formAssociated,this.component.state._name)}}}),t===void 0&&d("Ein Name am Eingabefeldern oder Schalter ist nicht zwingend erforderlich, kann aber für die Autocomplete-Funktion und für das statische Versenden des Eingabefeldes relevant sein.")}validateSyncValueBySelector(t){if(n&&typeof t=="string"){const i=document.querySelector(t);i&&(this.syncToOwnInput=i)}}componentWillLoad(){this.validateName(this.component._name),this.validateSyncValueBySelector(this.component._syncValueBySelector)}}export{v as n};
